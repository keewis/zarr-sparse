[project]
name = "zarr-sparse"
description = "Codec-based encoding for sparse arrays"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "zarr>=3.0.8",
]
dynamic = ["version"]
license = "MIT"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project.optional-dependencies]
pydata-sparse = ["sparse>=0.17.0"]
scipy-sparse = ["scipy>=1.15.3"]
torch-sparse = ["torch>=2.7.0"]

[dependency-groups]
dev = [
  "black>=25.1.0",
  "ipdb>=0.13.13",
  "ipython>=9.2.0",
  "pytest>=8.3.5",
  "pytest-xdist>=3.6.1",
]

[tool.hatch]
version.source = "vcs"

[tool.hatch.build]
hooks.vcs.version-file = "zarr_sparse/_version.py"

[tool.ruff]
target-version = "py311"
builtins = ["ellipsis"]
exclude = [
  ".git",
  ".eggs",
  "build",
  "dist",
  "__pycache__",
]
line-length = 100

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
]
fixable = ["I", "TID252"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
